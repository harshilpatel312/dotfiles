#!/bin/bash
# Bash wrappers for docker run commands (shamelessly copied from jess/dotfiles, some have been modified)


#
# Helper Functions
#
dcleanup(){
	docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
	docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}
del_stopped(){
	local name=$1
	local state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm $name
	fi
}
relies_on(){
	local containers=$@

	for container in $containers; do
		local state=$(docker inspect --format "{{.State.Running}}" $container 2>/dev/null)

		if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
			echo "$container is not running, starting it for you."
			$container
		fi
	done
}
# torproxy
torproxy(){
	del_stopped torproxy

	docker run -d \
		# --restart always \
		-v /etc/localtime:/etc/localtime:ro \
		-p 9050:9050 \
		--name torproxy \
		jess/tor-proxy

	#sudo hostess add torproxy $(docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" torproxy)
}
privoxy(){
	del_stopped privoxy
	relies_on torproxy

	docker run -d \
		# --restart always \
		--link torproxy:torproxy \
		-v /etc/localtime:/etc/localtime:ro \
		-p 8118:8118 \
		--name privoxy \
		jess/privoxy

	#sudo hostess add privoxy $(docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" privoxy)
}
vlc(){
	del_stopped vlc
	relies_on pulseaudio

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-e GDK_SCALE \
		-e GDK_DPI_SCALE \
		-e QT_DEVICE_PIXEL_RATIO \
		--link pulseaudio:pulseaudio \
		-e PULSE_SERVER=pulseaudio \
		-v $HOME/Torrents:/home/vlc/Torrents \
		--device /dev/dri \
		--name vlc \
		jess/vlc
}
pulseaudio(){
	del_stopped pulseaudio

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		--device /dev/snd \
		-p 4713:4713 \
		--restart always \
		--name pulseaudio \
		jess/pulseaudio
}
rygel(){
    local musicpath="$HOME/Music"
    local videopath="$HOME/Videos"
    local picspath="$HOME/Pictures"
    local OPTIND m v p o
    
    while getopts ":m:v:p:" o; do
        case $o in
            m)
                musicpath=$OPTARG
                ;;
            v)
                videopath=$OPTARG
                ;;
            p)
                picspath=$OPTARG
                ;;
        esac
    done
    shift $((OPTIND-1))
    # echo "videopath set is $videopath."
    # echo "picspath set is $picspath."
    # echo "musicpath set is $musicpath."
    
    del_stopped rygel
    
    docker run \
        -it \
        --rm \
        --net=host \
        -v $musicpath:/music \
        -v $videopath:/videos \
        -v $picspath:/pictures \
        --name rygel \
        sameersbn/rygel:latest
}